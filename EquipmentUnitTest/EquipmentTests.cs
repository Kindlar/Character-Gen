using NUnit.Framework;

namespace EquipmentUnitTest
{
    [TestFixture]
    public class EquipmentTests
    {
        [TestCase("Backpack (empty)", 2)]
        [TestCase("Barrel (empty)", 2)]
        [TestCase("Basket (empty)", .4)]
        [TestCase("Bedroll", .1)]
        [TestCase("Bell", 1)]
        [TestCase("Blanket, winter", .5)]
        [TestCase("Block and tackle", 5)]
        [TestCase("Bottle, wine, glass", 2)]
        [TestCase("Bucket (empty)", .5)]
        [TestCase("Caltrops", 1)]
        [TestCase("Candle", .01)]
        [TestCase("Canvas (sq. yd.)", .1)]
        [TestCase("Case, map or scroll", 1)]
        [TestCase("Chain (10 ft.)", 30)]
        [TestCase("Chalk, 1 piece", .01)]
        [TestCase("Chest (empty)", .01)]
        [TestCase("Crowbar", 2)]
        [TestCase("Firewood (per day)", .01)]
        [TestCase("Fishhook", .1)]
        [TestCase("Fishing net, 25 sq. ft.", 4)]
        [TestCase("Flask (empty)", .03)]
        [TestCase("Flint and steel", 1)]
        [TestCase("Grappling hook", 1)]
        [TestCase("Hammer", .5)]
        [TestCase("Ink (1 oz. vial)", 8)]
        [TestCase("Inkpen", .1)]
        [TestCase("Jug, clay", .03)]
        [TestCase("Ladder, 10-foot", .05)]
        [TestCase("Lamp, common", .1)]
        [TestCase("Lantern, bullseye", 12)]
        [TestCase("Lantern, hooded", 7)]
        [TestCase("Lock, Amazing", 150)]
        [TestCase("Lock, Very simple", 20)]
        [TestCase("Lock, Average", 40)]
        [TestCase("Lock, Good", 80)]
        [TestCase("Manacles", 15)]
        [TestCase("Manacles, masterwork", 50)]
        [TestCase("Mirror, small steel", 10)]
        [TestCase("Mug/Tankard, clay", .02)]
        [TestCase("Oil (1-pint flask)", .1)]
        [TestCase("Paper (sheet)", .4)]
        [TestCase("Parchment (sheet)", .2)]
        [TestCase("Pick, miner’s", 3)]
        [TestCase("Pitcher, clay", .02)]
        [TestCase("Piton", .1)]
        [TestCase("Pole, 10-foot", .2)]
        [TestCase("Pot, iron", .5)]
        [TestCase("Pouch, belt (empty)", 1)]
        [TestCase("Ram, portable", 10)]
        [TestCase("Rations, trail (per day)", .5)]
        [TestCase("Rope, hempen (50 ft.)", 1)]
        [TestCase("Rope, silk (50 ft.)", 10)]
        [TestCase("Sack (empty)", .1)]
        [TestCase("Sealing wax", 1)]
        [TestCase("Sewing needle", .5)]
        [TestCase("Signal whistle", .8)]
        [TestCase("Signet ring", 5)]
        [TestCase("Sledge", 1)]
        [TestCase("Soap (per lb.)", .5)]
        [TestCase("Spade or shovel", 2)]
        [TestCase("Spyglass", 1000)]
        [TestCase("Tent", 10)]
        [TestCase("Torch", .01)]
        [TestCase("Vial, ink or potion", 1)]
        [TestCase("Waterskin", 1)]
        [TestCase("Whetstone", .02)]
        [TestCase("Acid (flask)", 10)]
        [TestCase("Alchemist’s fire (flask)", 20)]
        [TestCase("Antitoxin (vial)", 50)]
        [TestCase("Everburning torch", 110)]
        [TestCase("Holy water (flask)", 25)]
        [TestCase("Smokestick", 20)]
        [TestCase("Sunrod", 2)]
        [TestCase("Tanglefoot bag", 50)]
        [TestCase("Thunderstone", 30)]
        [TestCase("Tindertwig", 1)]
        [TestCase("Alchemist’s lab", 500)]
        [TestCase("Artisan’s tools", 5)]
        [TestCase("Artisan’s tools, masterwork", 55)]
        [TestCase("Climber’s kit", 80)]
        [TestCase("Disguise kit", 50)]
        [TestCase("Healer’s kit", 50)]
        [TestCase("Holly and mistletoe", 0)]
        [TestCase("Holy symbol, wooden", 1)]
        [TestCase("Holy symbol, silver", 25)]
        [TestCase("Hourglass", 25)]
        [TestCase("Magnifying glass", 100)]
        [TestCase("Musical instrument, common", 5)]
        [TestCase("Musical instrument, masterwork", 100)]
        [TestCase("Scale, merchant’s", 2)]
        [TestCase("Spell component pouch", 5)]
        [TestCase("Spellbook, wizard’s (blank)", 15)]
        [TestCase("Thieves’ tools", 30)]
        [TestCase("Thieves’ tools, masterwork", 100)]
        [TestCase("Tool, masterwork", 20)]
        [TestCase("Water clock", 1000)]
        [TestCase("Artisan’s outfit", 1)]
        [TestCase("Cleric’s vestments", 5)]
        [TestCase("Cold weather outfit", 8)]
        [TestCase("Courtier’s outfit", 30)]
        [TestCase("Entertainer’s outfit", 3)]
        [TestCase("Explorer’s outfit", 10)]
        [TestCase("Monk’s outfit", 5)]
        [TestCase("Noble’s outfit", 75)]
        [TestCase("Peasant’s outfit", .1)]
        [TestCase("Royal outfit", 200)]
        [TestCase("Scholar’s outfit", 5)]
        [TestCase("Traveler’s outfit", 1)]
        [TestCase("Ale Gallon", .2)]
        [TestCase("Ale Mug", .04)]
        [TestCase("Banquet (per person)", 10)]
        [TestCase("Bread, per loaf", .02)]
        [TestCase("Cheese, hunk of", .1)]
        [TestCase("Inn stay, Good", 2)]
        [TestCase("Inn stay, Common", .5)]
        [TestCase("Inn stay, Poor", .5)]
        [TestCase("Meals, Good (per day)", .5)]
        [TestCase("Meals, Common (per day)", .3)]
        [TestCase("Meals, Poor (per day)", .1)]
        [TestCase("Meat, chunk of", .3)]
        [TestCase("Wine, Common (pitcher)", .2)]
        [TestCase("Wine, Fine (bottle)", 10)]
        [TestCase("", 0)]
        public void GivenEquipmentName_EquipmentCostsArePopulated(string equipName, double expectedCost)
        {
            // Arrange
            Equipment.Equipment item = new Equipment.Equipment();

            // Act
            Equipment.Equipment builtItem = item.BuildItem(equipName);
            var actualCost = builtItem.Cost;

            // Assert
            Assert.AreEqual(expectedCost, actualCost);
        }
    }
}